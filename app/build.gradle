plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getDefault())
}


ext.appName = "MaterialCodeTool"

android {
    namespace 'ly.android.material.code.tool'
    compileSdk 33

    defaultConfig {
        applicationId "ly.android.material.code.tool"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        renderscriptTargetApi 33
        renderscriptSupportModeEnabled true

        ndk {
            //abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64", "mips", "mips64"
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name == 'release') {
                    fileName = "${appName}-${defaultConfig.versionName}-release.apk"
                } else if (variant.buildType.name == 'debug') {
                    fileName = "${appName}-${defaultConfig.versionName}-${releaseTime()}-debug.apk"
                } else {
                    fileName = "${appName}-${defaultConfig.versionName}-${releaseTime()}-other.apk"
                }
                outputFileName = fileName
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }
    packagingOptions {
        pickFirst "license/README.dom.txt"
        pickFirst "license/LICENSE.dom-documentation.txt"
        pickFirst "license/NOTICE"
        pickFirst "license/LICENSE.dom-software.txt"
        pickFirst "license/LICENSE"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'

    implementation 'androidx.activity:activity-ktx:1.6.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //native
    implementation project(':mct_lib')

    //File
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'com.github.lumyuan:ly-file:v0.0.7'

    //MD3
    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.compose.material3:material3-window-size-class:1.0.1"

    //lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    //StatusBar
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'

    //GSON
    implementation 'com.google.code.gson:gson:2.10'

    //异步处理
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    //XPopup
    implementation 'com.github.li-xiaojun:XPopup:2.9.19'

    //Refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //OKHttp
    //implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Coroutine 协程 https://developer.android.google.cn/kotlin/coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Koin 依赖注入 https://insert-koin.io
    implementation "io.insert-koin:koin-android:3.1.3"

    implementation  'io.github.scwang90:refresh-layout-kernel:2.0.5'      //核心必须依赖
    implementation  'io.github.scwang90:refresh-header-falsify:2.0.5'     //虚拟刷新头
    implementation  'io.github.scwang90:refresh-header-material:2.0.5'    //谷歌刷新头
    implementation  'io.github.scwang90:refresh-footer-classics:2.0.5'    //经典加载

    //汉字转拼音
    implementation 'com.github.promeg:tinypinyin:2.0.3' // TinyPinyin核心包，约80KB
    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3' // 可选，适用于Android的中国地区词典
    implementation 'com.github.promeg:tinypinyin-lexicons-java-cncity:2.0.3' // 可选，适用于Java的中国地区词典

    //sora editor
    implementation(platform("io.github.Rosemoe.sora-editor:bom:0.21.0"))
    implementation("io.github.Rosemoe.sora-editor:editor")
    implementation("io.github.Rosemoe.sora-editor:language-textmate")

    //language tieCode
    implementation project(":language-tiecode")
}